name: QA & sanity checks
on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
  schedule:
    # Weekly scan
    - cron: "15 4 * * 1"

env:
  DEBIAN_FRONTEND: noninteractive
  GO_TESTS_TIMEOUT: 30m
  INSIGHTS_APT_DEPS: "libwayland-dev"
  TICS_COVERAGE_RUNNER: "ubuntu-24.04" # Defines which coverage results we pass to TiCS. TiCS does not allow multiple reports per file
  # RAW_MATRIX defines the OS/module matrix for jobs.
  # The "server" module only supports ubuntu.
  RAW_MATRIX: |
    {
      "os": ["ubuntu-24.04", "windows-2022", "macos-13", "macos-14"],
      "module": ["insights", "common"],
      "include": [
        {"os": "ubuntu-24.04", "module": "server"}
      ]
    }

defaults:
  run:
    shell: bash

jobs:
  plan:
    # Dynamic matrix generation for subsequent jobs.
    # The `env` context is not available in `strategy`, but `needs` is: https://docs.github.com/en/actions/reference/workflows-and-actions/contexts#context-availability.
    name: Create test plan
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          echo "matrix=$(echo "${RAW_MATRIX}" | jq -c .)"  >> $GITHUB_OUTPUT

  go-sanity:
    name: "Go: Code sanity"
    needs: plan
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.plan.outputs.matrix) }}
    steps:
      - name: Install dependencies on Linux
        if: runner.os == 'Linux' && matrix.module == 'insights'
        run: |
          sudo apt update
          sudo apt install -y ${{ env.INSIGHTS_APT_DEPS }}
      - uses: actions/checkout@v5
      - name: Go code sanity check
        uses: canonical/desktop-engineering/gh-actions/go/code-sanity@go-toolchain-fallback
        with:
          working-directory: ${{ matrix.module }}
          tools-directory: ${{ github.workspace }}/tools
          golangci-lint-configfile: ${{ github.workspace }}/.golangci.yaml

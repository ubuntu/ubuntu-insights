name: Validate debian/copyright

env:
  lrc_build_deps: "build-essential debhelper-compat fp-compiler fp-units-fcl fp-utils"
  licenserecon_repo: "https://git.launchpad.net/ubuntu/+source/licenserecon"
  licenserecon_branch: "applied/ubuntu/devel"

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
    paths:
      - "insights/debian/copyright"
      - "insights/debian/lrc.config"
      - "insights/go.mod"
  workflow_dispatch:

jobs:
  run-lrc:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest licenserecon commit hash
        id: licenserecon-commit
        run: |
          if COMMIT_HASH=$(git ls-remote ${{ env.licenserecon_repo }} ${{ env.licenserecon_branch }} | cut -f1); then
            echo "hash=$COMMIT_HASH" >> $GITHUB_OUTPUT
            echo "cache-enabled=true" >> $GITHUB_OUTPUT
            echo "Latest licenserecon commit: $COMMIT_HASH"
          else
            echo "::warning::Failed to get latest licenserecon commit hash, proceeding without cache"
            echo "hash=fallback-$(date +%Y%m%d)" >> $GITHUB_OUTPUT
            echo "cache-enabled=false" >> $GITHUB_OUTPUT
          fi

      - name: Cache licenserecon build - restore
        uses: actions/cache/restore@v4
        id: cache-licenserecon-restore
        if: steps.licenserecon-commit.outputs.cache-enabled == 'true'
        with:
          path: licenserecon_*.deb
          key: ${{ runner.os }}-licenserecon-${{ steps.licenserecon-commit.outputs.hash }}
          restore-keys: |
            ${{ runner.os }}-licenserecon-

      - name: Install build dependencies
        if: steps.licenserecon-commit.outputs.cache-enabled == 'false' || steps.cache-licenserecon-restore.outputs.cache-hit != 'true'
        run: |
          sudo apt update
          sudo apt install -y ${{ env.lrc_build_deps }}

      - name: Clone and build licenserecon
        id: build-licenserecon
        if: steps.licenserecon-commit.outputs.cache-enabled == 'false' || steps.cache-licenserecon-restore.outputs.cache-hit != 'true'
        run: |
          git clone -b ${{ env.licenserecon_branch }} ${{ env.licenserecon_repo }}
          cd licenserecon
          dpkg-buildpackage -us -uc -b

      - name: Install licenserecon
        run: |
          sudo dpkg -i licenserecon_*.deb || sudo apt-get install -f -y

      - name: Cache licenserecon build - save # Save licenserecon to cache even if `lrc` fails down the road.
        uses: actions/cache/save@v4
        if: steps.licenserecon-commit.outputs.cache-enabled == 'true' && steps.cache-licenserecon-restore.outputs.cache-hit != 'true' && steps.build-licenserecon.outcome == 'success'
        with:
          path: licenserecon_*.deb
          key: ${{ runner.os }}-licenserecon-${{ steps.licenserecon-commit.outputs.hash }}

      - name: Checkout repository
        uses: actions/checkout@v5

      - name: setup-go cache workaround #https://github.com/actions/setup-go/issues/424
        shell: bash
        run: echo "TAR_OPTIONS=--skip-old-files" >> $GITHUB_ENV
      - uses: actions/setup-go@v6
        with:
          go-version-file: go.work
          cache-dependency-path: |
            insights/go.sum
            server/go.sum
            common/go.sum
            tools/go.sum

      - name: Vendor Go modules
        working-directory: insights
        env:
          GOWORK: off
        run: |
          go mod vendor

      - name: Run lrc
        working-directory: insights
        run: |
          lrc
